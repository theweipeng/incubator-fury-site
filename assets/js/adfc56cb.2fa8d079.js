"use strict";(self.webpackChunkfury_site=self.webpackChunkfury_site||[]).push([[1462],{55343:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>t,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=n(85893),r=n(11151);const s={title:"Scala Serialization Guide",sidebar_position:4,id:"scala_guide",license:'Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the "License"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'},l=void 0,o={id:"guide/scala_guide",title:"Scala Serialization Guide",description:"Fory supports all scala object serialization:",source:"@site/docs/guide/scala_guide.md",sourceDirName:"guide",slug:"/guide/scala_guide",permalink:"/docs/guide/scala_guide",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/fory-site/tree/main/docs/guide/scala_guide.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Scala Serialization Guide",sidebar_position:4,id:"scala_guide",license:'Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the "License"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'}},t={},c=[{value:"Install",id:"install",level:2},{value:"Quict Start",id:"quict-start",level:2},{value:"Fory creation",id:"fory-creation",level:2},{value:"Serialize case object",id:"serialize-case-object",level:2},{value:"Serialize pojo",id:"serialize-pojo",level:2},{value:"Serialize object singleton",id:"serialize-object-singleton",level:2},{value:"Serialize collection",id:"serialize-collection",level:2},{value:"Serialize Tuple",id:"serialize-tuple",level:2},{value:"Serialize Enum",id:"serialize-enum",level:2},{value:"Scala3 Enum",id:"scala3-enum",level:3},{value:"Scala2 Enum",id:"scala2-enum",level:3},{value:"Serialize Option",id:"serialize-option",level:2}];function d(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.p,{children:"Fory supports all scala object serialization:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"case"})," class serialization supported"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"pojo/bean"})," class serialization supported"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"object"})," singleton serialization supported"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"collection"})," serialization supported"]}),"\n",(0,a.jsxs)(i.li,{children:["other types such as ",(0,a.jsx)(i.code,{children:"tuple/either"})," and basic types are all supported too."]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Scala 2 and 3 are both supported."}),"\n",(0,a.jsx)(i.h2,{id:"install",children:"Install"}),"\n",(0,a.jsx)(i.p,{children:"To add a dependency on Fory scala for scala 2 with sbt, use the following:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-sbt",children:'libraryDependencies += "org.apache.fory" % "fory-scala_2.13" % "0.10.3"\n'})}),"\n",(0,a.jsx)(i.p,{children:"To add a dependency on Fory scala for scala 3 with sbt, use the following:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-sbt",children:'libraryDependencies += "org.apache.fory" % "fory-scala_3" % "0.10.3"\n'})}),"\n",(0,a.jsx)(i.h2,{id:"quict-start",children:"Quict Start"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:'case class Person(name: String, id: Long, github: String)\ncase class Point(x : Int, y : Int, z : Int)\n\nobject ScalaExample {\n  val fory: Fory = Fory.builder().withScalaOptimizationEnabled(true).build()\n  // Register optimized fory serializers for scala\n  ScalaSerializers.registerSerializers(fory)\n  fory.register(classOf[Person])\n  fory.register(classOf[Point])\n\n  def main(args: Array[String]): Unit = {\n    val p = Person("Shawn Yang", 1, "https://github.com/chaokunyang")\n    println(fory.deserialize(fory.serialize(p)))\n    println(fory.deserialize(fory.serialize(Point(1, 2, 3))))\n  }\n}\n'})}),"\n",(0,a.jsx)(i.h2,{id:"fory-creation",children:"Fory creation"}),"\n",(0,a.jsx)(i.p,{children:"When using fory for scala serialization, you should create fory at least with following options:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:"import org.apache.fory.Fory\nimport org.apache.fory.serializer.scala.ScalaSerializers\n\nval fory = Fory.builder().withScalaOptimizationEnabled(true).build()\n\n// Register optimized fory serializers for scala\nScalaSerializers.registerSerializers(fory)\n"})}),"\n",(0,a.jsx)(i.p,{children:"Depending on the object types you serialize, you may need to register some scala internal types:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:'fory.register(Class.forName("scala.Enumeration.Val"))\n'})}),"\n",(0,a.jsxs)(i.p,{children:["If you want to avoid such registration, you can disable class registration by ",(0,a.jsx)(i.code,{children:"ForyBuilder#requireClassRegistration(false)"}),".\nNote that this option allow to deserialize objects unknown types, more flexible but may be insecure if the classes contains malicious code."]}),"\n",(0,a.jsxs)(i.p,{children:["And circular references are common in scala, ",(0,a.jsx)(i.code,{children:"Reference tracking"})," should be enabled by ",(0,a.jsx)(i.code,{children:"ForyBuilder#withRefTracking(true)"}),". If you don't enable reference tracking, ",(0,a.jsx)(i.a,{href:"https://github.com/apache/fory/issues/1032",children:"StackOverflowError"})," may happen for some scala versions when serializing scala Enumeration."]}),"\n",(0,a.jsx)(i.p,{children:"Note that fory instance should be shared between multiple serialization, the creation of fory instance is not cheap."}),"\n",(0,a.jsxs)(i.p,{children:["If you use shared fory instance across multiple threads, you should create ",(0,a.jsx)(i.code,{children:"ThreadSafeFory"})," instead by ",(0,a.jsx)(i.code,{children:"ForyBuilder#buildThreadSafeFory()"})," instead."]}),"\n",(0,a.jsx)(i.h2,{id:"serialize-case-object",children:"Serialize case object"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:'case class Person(github: String, age: Int, id: Long)\nval p = Person("https://github.com/chaokunyang", 18, 1)\nprintln(fory.deserialize(fory.serialize(p)))\nprintln(fory.deserializeJavaObject(fory.serializeJavaObject(p)))\n'})}),"\n",(0,a.jsx)(i.h2,{id:"serialize-pojo",children:"Serialize pojo"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:'class Foo(f1: Int, f2: String) {\n  override def toString: String = s"Foo($f1, $f2)"\n}\nprintln(fory.deserialize(fory.serialize(Foo(1, "chaokunyang"))))\n'})}),"\n",(0,a.jsx)(i.h2,{id:"serialize-object-singleton",children:"Serialize object singleton"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:"object singleton {\n}\nval o1 = fory.deserialize(fory.serialize(singleton))\nval o2 = fory.deserialize(fory.serialize(singleton))\nprintln(o1 == o2)\n"})}),"\n",(0,a.jsx)(i.h2,{id:"serialize-collection",children:"Serialize collection"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:'val seq = Seq(1,2)\nval list = List("a", "b")\nval map = Map("a" -> 1, "b" -> 2)\nprintln(fory.deserialize(fory.serialize(seq)))\nprintln(fory.deserialize(fory.serialize(list)))\nprintln(fory.deserialize(fory.serialize(map)))\n'})}),"\n",(0,a.jsx)(i.h2,{id:"serialize-tuple",children:"Serialize Tuple"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:'val tuple = Tuple2(100, 10000L)\nprintln(fory.deserialize(fory.serialize(tuple)))\nval tuple = Tuple4(100, 10000L, 10000L, "str")\nprintln(fory.deserialize(fory.serialize(tuple)))\n'})}),"\n",(0,a.jsx)(i.h2,{id:"serialize-enum",children:"Serialize Enum"}),"\n",(0,a.jsx)(i.h3,{id:"scala3-enum",children:"Scala3 Enum"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:"enum Color { case Red, Green, Blue }\nprintln(fory.deserialize(fory.serialize(Color.Green)))\n"})}),"\n",(0,a.jsx)(i.h3,{id:"scala2-enum",children:"Scala2 Enum"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:"object ColorEnum extends Enumeration {\n  type ColorEnum = Value\n  val Red, Green, Blue = Value\n}\nprintln(fory.deserialize(fory.serialize(ColorEnum.Green)))\n"})}),"\n",(0,a.jsx)(i.h2,{id:"serialize-option",children:"Serialize Option"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:"val opt: Option[Long] = Some(100)\nprintln(fory.deserialize(fory.serialize(opt)))\nval opt1: Option[Long] = None\nprintln(fory.deserialize(fory.serialize(opt1)))\n"})})]})}function u(e={}){const{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},11151:(e,i,n)=>{n.d(i,{Z:()=>o,a:()=>l});var a=n(67294);const r={},s=a.createContext(r);function l(e){const i=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(s.Provider,{value:i},e.children)}}}]);